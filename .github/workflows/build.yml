name: SonarQube Cloud Analysis

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para un an치lisis completo

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20 # Cambia a tu versi칩n de Node.js si es diferente

      - name: Install dependencies
        run: npm install # Cambia a npm install si usas npm

      - name: Build project and generate coverage
        run: |
          npm test --watch=false --code-coverage # Genera la cobertura en la carpeta coverage
          npm run build --prod # Construye el proyecto

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  prebuild-front:
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ticketflow
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cd htdocs/ticketflow.mindsoftdev.com/ticketflow &&
            git pull origin master &&
            npm install || echo "npm install failed"
            npm audit || echo "npm audit failed" || true
            npm audit fix || echo "npm audit fix failed" || true

  prebuild-back:
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: servicios
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cd htdocs/servicios.mindsoftdev.com/serviciosTicketFlow/ && composer i && composer u && npm i || npm audit fix

  dast-scan:
    name: OWASP ZAP Dynamic Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Deploy application to test environment
        run: echo "Deploying application to test environment..."

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'https://ticketflow.mindsoftdev.com'  # URL de tu aplicaci칩n en prueba
          format: 'html'  # Generar reporte en HTML
          rules_file_name: '.zap/rules.json'  # Configuraci칩n personalizada de reglas (opcional)

      - name: Upload OWASP ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html

  build-front:
    runs-on: ubuntu-latest
    steps:
      - name: Build project
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ticketflow
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cd htdocs/ticketflow.mindsoftdev.com/ticketflow && npm run build
  
  build-back:
    runs-on: ubuntu-latest
    steps:
      - name: Build project
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: servicios
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cd htdocs/servicios.mindsoftdev.com/serviciosTicketFlow && composer u && composer i && npm run build

  test-front:
    runs-on: ubuntu-latest
    steps:
      - name: Build project
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ticketflow
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cd htdocs/ticketflow.mindsoftdev.com/ticketflow && npm test
  
  test-back:
    runs-on: ubuntu-latest
    steps:
      - name: Build project
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: servicios
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cd htdocs/servicios.mindsoftdev.com/serviciosTicketFlow && php artisan test || true

  monitor-back:
    runs-on: ubuntu-latest
    steps:
      - name: Build project
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: servicios
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: curl servicios.mindsoftdev.com/up
