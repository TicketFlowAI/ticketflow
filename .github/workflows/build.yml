name: SonarQube Cloud Analysis

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para un análisis completo

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20 # Cambia a tu versión de Node.js si es diferente

      - name: Install dependencies
        run: npm install # Cambia a npm install si usas npm

      - name: Build project and generate coverage
        run: |
          npm test --watch=false --code-coverage # Genera la cobertura en la carpeta coverage
          npm run build --prod # Construye el proyecto

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  prebuild:
    name: Prebuild Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start SSH Agent and Add Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Connect via SSH and update repository
        run: |
          ssh -o StrictHostKeyChecking=no user@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/ticketflow/htdocs/ticketflow.mindsoftdev.com/ticketflow
            git pull origin master
            npm install || echo "npm install failed"
            npm audit || echo "npm audit failed" || true
            npm audit fix || echo "npm audit fix failed" || true
          EOF

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start SSH Agent and Add Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Connect via SSH and update repository
        run: |
          ssh -o StrictHostKeyChecking=no user@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/ticketflow/htdocs/ticketflow.mindsoftdev.com/ticketflow
            ng build
          EOF

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start SSH Agent and Add Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Connect via SSH and update repository
        run: |
          ssh -o StrictHostKeyChecking=no user@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/ticketflow/htdocs/ticketflow.mindsoftdev.com/ticketflow
            ng test
          EOF
